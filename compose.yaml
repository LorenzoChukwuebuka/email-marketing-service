services:
  nginx:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    ports:
      - "5000:80"
    volumes:
      - ./frontend:/app/frontend
      - ./frontend/config/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - app-network
    depends_on:
      - go-backend

  go-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    ports:
      - "9000:9000"
      - "1025:1025"
      - "465:465" # Production SMTP (STARTTLS)
    environment:
      SERVER_MODE: "production"
    env_file: ./backend/.env
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./backend:/app/backend
      - /etc/letsencrypt:/etc/letsencrypt:ro # Mount certificate from host
    cap_add:
      - NET_BIND_SERVICE
    privileged: true # Be cautious with this in production

  # certbot:
  #   image: certbot/certbot
  #   command: certonly --standalone -d smtp.crabmailer.com --agree-tos --non-interactive --email enzobyte.tech@gmail.com
  #   volumes:
  #     - /etc/letsencrypt:/etc/letsencrypt
  #     - /var/lib/letsencrypt:/var/lib/letsencrypt
  #   networks:
  #     - app-network

  # certbot-renew:
  #   image: certbot/certbot
  #   command: renew --quiet
  #   volumes:
  #     - /etc/letsencrypt:/etc/letsencrypt
  #     - /var/lib/letsencrypt:/var/lib/letsencrypt
  #   networks:
  #     - app-network

#   mailhog:
#     image: mailhog/mailhog
#     ports:
#       - "1027:1025" # SMTP
#       - "8025:8025" # Web UI
#     networks:
#       - app-network

networks:
  app-network:
    driver: bridge
