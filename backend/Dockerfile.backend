# Stage 1: Build the Go backend
FROM golang:1.20 AS backend-builder

WORKDIR /app/backend
COPY . .
RUN CGO_ENABLED=0 GOOS=linux go build -o main .

# Stage 2: Final backend image
FROM alpine

# Create a non-root user
RUN addgroup -S appgroup && adduser -S appuser -G appgroup

WORKDIR /app/backend  

# Install bash and nano
RUN apk update && apk add bash nano

# Copy the Go binary from the builder stage
COPY --from=backend-builder /app/backend/main .

# Copy templates directory
COPY --from=backend-builder /app/backend/api/v1/templates ./api/v1/templates

# Copy .env file for the backend
COPY .env .

# Copy healthcheck script
COPY ./healthcheck.sh /healthcheck.sh
RUN chmod +x /healthcheck.sh

# Create directories for dynamic folders
RUN mkdir -p /app/backend/smtp_settings /app/backend/uploads

# Set proper ownership and permissions
RUN chown -R appuser:appgroup /app/backend && \
    chmod -R 755 /app/backend && \
    chmod -R 775 /app/backend/smtp_settings /app/backend/uploads

# Expose backend ports
EXPOSE 9000 9001 1025 465

# Add healthcheck
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 CMD /healthcheck.sh

# Switch to non-root user
USER appuser


# Start the Go application
CMD ["./main"]